import sys
from lib.utils.dirs import *
from lib.utils.usage import *
from lib.utils.settings import *
from lib.handler.fingerprint import *

path = os.path.join(os.path.abspath('.').split('lib')[0], 'plugins/attacks/')

vulnerabilityObject = { #This is a scanned vulnerability object
    'Name',  #name of vulnerabilty
    'Vulnerability Status'  #status of vulnerabilty

}


class Scanner(object):
    usage = usage()

    def __init__(self, url, vulnerabilities):
        self.url = url
        self.vulnerabilities = vulnerabilities

    def start(self):
        kwargs = ARGS
        PTIME(self.url)
        Fingerprint(kwargs, self.url).run()
        for file in dirs(path):
            name_file = file.split('.py')[0]
            if name_file in self.vulnerabilities:
                __import__('plugins.attacks.%s' % name_file)
                module = sys.modules['plugins.attacks.%s' % name_file]
                module = module.__dict__[name_file]
                module(kwargs, self.url, kwargs['data']).run()

        return [{'name': "SQL Injection", 'Vulnerability Status': "Not Avaliable"}]
