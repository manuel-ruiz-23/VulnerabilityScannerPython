import sys
from lib.utils.dirs import *
from lib.utils.usage import *
from lib.utils.settings import *
from lib.handler.fingerprint import *
from lib.handler.crawler import *

path = os.path.join(os.path.abspath('.').split('lib')[0], 'plugins/attacks/')

vulnerabilityObject = { #This is a scanned vulnerability object
    'Name',  #name of vulnerabilty
    'Vulnerability Status'  #status of vulnerabilty

}

vulnerabylitiesResponse= []

class Scanner(object):
    usage = usage()
    def __init__(self, url, vulnerabilities):
        self.url = url
        self.vulnerabilities = vulnerabilities

    def start(self):
        kwargs = ARGS
        PTIME(self.url)
        Fingerprint(kwargs, self.url).run()
        for file in dirs(path):
            name_file = file.split('.py')[0]
            if name_file in self.vulnerabilities:
                #crawler
                current_url = None
                json = ""
                result = False
                for u in Crawler().run(kwargs, self.url, kwargs['data']):
                    current_url = u.split("?")[0] + "?id=1"
                    __import__('plugins.attacks.%s' % name_file)
                    module = sys.modules['plugins.attacks.%s' % name_file]
                    module = module.__dict__[name_file]
                    status = module(kwargs, current_url, kwargs['data']).run()
                    if status:
                        result =True
                        break
                vulnerabylitiesResponse.append({'Name': name_file, 'VulnerabilityStatus': result})
        return vulnerabylitiesResponse
