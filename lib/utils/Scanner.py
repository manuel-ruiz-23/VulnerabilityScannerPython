import sys
from lib.utils.dirs import *
from lib.utils.usage import *
from lib.utils.settings import *
from lib.handler.fingerprint import *
from lib.handler.crawler import *
import requests
import json

path = os.path.join(os.path.abspath('.').split('lib')[0], 'plugins/attacks/')

vulnerabilityObject = { #This is a scanned vulnerability object
   'Name',  #name of vulnerabilty
   'Vulnerability Status'  #status of vulnerabilty

}

responseObject = { "URL_Tested": "",
                 "IdScann": "",
                 "Results": ""}

vulnerabylitiesResponse= []


class Scanner(object):
  usage = usage()

  def __init__(self, url, vulnerabilities, idScann):
      self.url = url
      self.vulnerabilities = vulnerabilities
      self.id_scann = idScann

  def start(self):
      kwargs = ARGS
      #PTIME(self.url)
      vulnerabylitiesResponse = []
      for file in dirs(path):
          name_file = file.split('.py')[0]
          if name_file in self.vulnerabilities:
              #crawler
              current_url = None
              result = False
              for u in Crawler().run(kwargs, self.url, kwargs['data']):
                  current_url = u.split("?")[0] + "?id=1"
                  __import__('plugins.attacks.%s' % name_file)
                  module = sys.modules['plugins.attacks.%s' % name_file]
                  module = module.__dict__[name_file]
                  status = module(kwargs, current_url, kwargs['data']).run()
                  if status:
                      result =True
                      break
              vulnerabylitiesResponse.append({'Vulnerability': name_file, 'VulnerabilityStatus': str(result)})
      print(vulnerabylitiesResponse)
      # CREATE POST
      responseObject = json.dumps({'URL_Tested': str(self.url), 'IdScann': str(self.id_scann), 'Results': vulnerabylitiesResponse})
      headers = {'Content-type': 'application/json', 'Accept': 'text/plain'}
      #this one
      requests.post('http://vulnerabilityscanner_web_1:3000/api/v1/notify', data=responseObject, headers=headers)
